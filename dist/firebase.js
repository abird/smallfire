const t={get:function(t,e){return n(this.dbinfo,{dataPath:t,options:e})},set:function(t,e,a){return n(this.dbinfo,{dataPath:t,method:"PUT",value:e,options:a})},update:function(t,e,a){return n(this.dbinfo,{dataPath:t,method:"PATCH",value:e,options:a})},push:function(t,e,a){return n(this.dbinfo,{dataPath:t,method:"POST",value:e,options:a})},delete:function(t,e){return n(this.dbinfo,{dataPath:t,method:"DELETE",options:e})},listen:function(t,e,n){const s=o(this.dbinfo,{dataPath:t,options:n});let i,r,d;const h=async()=>{await this.dbinfo.auth.tokenRefresh(),u()},c=(t,a)=>{const{path:o,data:n}=JSON.parse(t),s=o.split("/").filter((t=>t.length)),r=s.pop();let d=i;s.forEach((t=>(d[t]=d[t]||{})&&(d=d[t]))),a?(r&&(d=d[r]),Object.assign(d,n)):r?null!==n?d[r]=n:delete d[r]:i=n,e(i,o,n)},u=()=>{r=new EventSource(s),r.onerror=function(){new Date-d>2e3?h():a("Error opening connection")},r.addEventListener("put",(t=>c(t.data))),r.addEventListener("patch",(t=>c(t.data,!0))),r.addEventListener("auth_revoked",(t=>h())),d=new Date};return u(),()=>r.close()}};function e(e,a,o){const n={host:"firebaseio.com",database:e,auth:a};if(o){const t={us:"firebaseio.com",europe:"europe-west1.firebasedatabase.app",asia:"asia-southeast1.firebasedatabase.app","us-central1":"firebaseio.com","europe-west1":"europe-west1.firebasedatabase.app","asia-southeast1":"asia-southeast1.firebasedatabase.app"};n.host=t[o]||o}return{...t,dbinfo:n}}const a=t=>{throw t};function o(t,{dataPath:e,options:a}){const{host:o,database:n,auth:s}=t;a&&Object.keys(a).map((function(t){const e=a[t];"string"!=typeof e||e.match(/^".*"$/)||(a[t]=`"${e}"`)}));const i=new URLSearchParams(a);s&&i.append("auth",s.idToken);let r=i.toString();return`https://${n}.${o}/${e}.json${r?"?"+r:""}`}async function n(t,{dataPath:e,method:s,value:i,options:r,headers:d}){const h=o(t,{dataPath:e,options:r}),c={method:s||"GET",mode:"cors",cache:"no-cache",headers:{pragma:"no-cache","cache-control":"no-cache"}};i&&(c.body=JSON.stringify(i)),d&&Object.assign(c.headers,d);let u=await fetch(h,c),f=await u.json();if(!u.ok){const o=t.auth;if(o&&401===u.status)return await o.tokenRefresh(),await n(t,{dataPath:e,method:s,value:i,options:r});a(f.error)}return f}"undefined"!=typeof window&&(window.smallfire=window.smallfire||{},window.smallfire.getFirebaseDB=e);export{e as getFirebaseDB};
